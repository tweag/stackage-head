version: 2
jobs:
  triggered_build:
    docker:
      - image: mrkkrp/haskell-ghc-8.4.3:0.1.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - stack-home-{{ checksum "stack.yaml" }}
            - stack-home-
      - restore_cache:
          keys:
            - stack-work-{{ checksum "stack.yaml" }}
            - stack-work-
      - run: stack setup
      - run: stack build --flag stackage-head:dev
      - run: stack test
      - save_cache:
          key: stack-home-{{ checksum "stack.yaml" }}
          paths: "~/.stack"
      - save_cache:
          key: stack-work-{{ checksum "stack.yaml" }}
          paths: ".stack-work"

  scheduled_build:
    resource_class: xlarge
    docker:
      - image: rctwg/stackage-head:0.3.2
    environment:
      BUILD_PLAN: nightly-2018-10-23
      JOBS: 9
      FLAKY_PKGS: "" # "--flaky threads --flaky lifted-async --flaky fsnotify-conduit --flaky hspec-core --flaky stm-delay"
      HISTORY_LENGTH: 16
    steps:
      - checkout
      - run:
          name: Get Nightly GHC build
          command: |
            mkdir -p $HOME/ghc-head-bindist
            curl -L https://ghc-artifacts.s3.amazonaws.com/nightly/validate-x86_64-linux/latest/bindist.tar.xz | tar -xJ --strip-components=1 -C $HOME/ghc-head-bindist
            curl https://ghc-artifacts.s3.amazonaws.com/nightly/validate-x86_64-linux/latest/metadata.json --output metadata.json
            cd $HOME/ghc-head-bindist
            ./configure --prefix=$HOME/ghc-head
            make install
      - run:
          name: Obtaining build plan
          command: |
            curl https://raw.githubusercontent.com/fpco/stackage-nightly/master/$BUILD_PLAN.yaml --output $BUILD_PLAN.yaml
      - restore_cache:
          keys:
            - build-reports-3-
      - restore_cache:
          keys:
            - stack-home-{{ checksum "stack.yaml" }}
            - stack-home-
      - restore_cache:
          keys:
            - stack-work-{{ checksum "stack.yaml" }}
            - stack-work-
      - run:
          name: Build stack programs
          command: |
            set -e
            stack --no-terminal install stackage-curator
            stack --no-terminal install
      - run:
          name: Patching build plan to use custom URLs
          command: |
            fix-build-plan $BUILD_PLAN.yaml custom-source-urls.yaml
      - run:
          name: Execute the build plan
          no_output_timeout: "3h"
          command: |
            set +e
            stackage-head already-seen --target $BUILD_PLAN --ghc-metadata metadata.json --outdir $HOME/build-reports
            already_seen=$?
            set -e
            if [ $already_seen -eq 0 ] ; then
              stack update # for #29
              stackage-curator make-bundle --allow-newer --jobs $JOBS --plan-file $BUILD_PLAN.yaml --docmap-file docmap-file.yaml --target $BUILD_PLAN --skip-haddock --skip-hoogle --skip-benches --no-rebuild-cabal -v >build.log 2>&1 || true
              EPOCH="$(grep -Ev '^(#|[[:space:]]*$)' epoch.txt)"
              stackage-head add --build-url $CIRCLE_BUILD_URL --ghc-metadata metadata.json --build-log build.log --build-per-package-dir logs/nightly --target $BUILD_PLAN --epoch "$EPOCH" --outdir $HOME/build-reports
            fi
            stackage-head truncate --history-length $HISTORY_LENGTH --outdir $HOME/build-reports
      - store_artifacts:
          path: "build.log"
      - store_artifacts:
          path: "/home/circleci/build-reports/latest.csv"
      - run:
          name: Package build reports and logs
          command: |
            set -x
            cd
            tar cf build-reports.tar build-reports
            tar rf build-reports.tar -C project logs
            xz build-reports.tar
      - store_artifacts:
          path: "/home/circleci/build-reports.tar.xz"
      - save_cache:
          key: stack-home-{{ checksum "stack.yaml" }}
          paths: "/home/circleci/.stack"
      - save_cache:
          key: stack-work-{{ checksum "stack.yaml" }}
          paths: ".stack-work"
      - save_cache:
          # This ensures that we push to the cache on every commit. If the
          # part with SHA1 is omitted, CircleCI may get too smart and skip
          # saving cache.
          key: build-reports-3-{{ .BuildNum }}
          paths:
            - /home/circleci/build-reports
      - run:
          name: Generate static site with the results
          command: |
            stackage-head generate-site --site-dir $HOME/site $FLAKY_PKGS --outdir $HOME/build-reports
      - run:
          name: Upload the site to S3 bucket
          command: |
            cd $HOME/site
            cp -v $HOME/project/.circleci/.s3cfg $HOME/.s3cfg
            s3cmd put --access_key=$S3_ACCESS_KEY --secret_key=$S3_SECRET_KEY --region=$S3_REGION -P index.html s3://stackage-head/
            s3cmd sync --access_key=$S3_ACCESS_KEY --secret_key=$S3_SECRET_KEY --region=$S3_REGION --delete-removed --skip-existing -P * s3://stackage-head/
      - run:
          name: Diff build results
          command: |
            stackage-head diff $FLAKY_PKGS --outdir $HOME/build-reports

workflows:
  version: 2
  triggered-build:
    jobs:
      - triggered_build

  nightly:
    triggers:
      - schedule:
          cron: "0 0,6,12,18 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - scheduled_build
